import discord
from discord.ext import commands
import datetime
import locale
import pytz

class Logs(commands.Cog):

    def __init__(self, client):
        self.client = client
        
    #ON MEMBER UPDATE
    @commands.Cog.listener()
    async def on_member_update(self, before, after):
        logchannel = self.client.get_channel(722457936051306596)
        if not before.guild.id == 722190594268725288:
            return
        if before.display_name != after.display_name:
            e = discord.Embed(title = f'{before.guild.name} | –°–º–µ–Ω–∞ –Ω–∏–∫–Ω–µ–π–º–∞', color = 0x546c9b, description = f'**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {before.mention}\n\n–î–æ: `{before.display_name}`\n\n–ü–æ—Å–ª–µ: `{after.display_name}`**')
            await logchannel.send(embed = e)

    #ON MESSAGE EDIT
    @commands.Cog.listener()
    async def on_message_edit(self, before, after):
        try:
            logchannel = self.client.get_channel(798248355888496642)
            if not before.guild.id == 722190594268725288:
                return
            elif before.channel == logchannel:
                return
            elif before.embeds:
                return
            else:
                e = discord.Embed(title = f'{before.guild.name} | –°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ ‚úâÔ∏è üñäÔ∏è', description = f'**{before.author.mention} –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª(–∞) —Å–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ\n–≤ –∫–∞–Ω–∞–ª–µ #{before.channel.name}. [–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é]({before.jump_url})**')
                e.add_field(name = '–î–æ:', value = before.content, inline = False)
                e.add_field(name = '–ü–æ—Å–ª–µ:', value = after.content, inline = False)
                e.set_footer(text = f'Message ID: {before.id} ‚Ä¢  Author ID: {before.author.id}', icon_url = before.author.avatar_url)
                await logchannel.send(embed = e)
        except AttributeError:
            pass


    #ON MESSAGE DELETE
    @commands.Cog.listener()
    async def on_message_delete(self, message):
        try:
            logchannel = self.client.get_channel(798248355888496642)
            if not message.guild.id == 722190594268725288:
                return
            elif message.channel == logchannel:
                return
            elif message.author.bot:
                return
            else:
                locale.setlocale(locale.LC_ALL, "ru_RU.utf8")
                time = datetime.datetime.now(pytz.timezone('Europe/Moscow')).strftime("%A, %d %b. %Y –≥., %H:%M:%S")
                e = discord.Embed(title = f'{message.guild.name} | –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ ‚úâÔ∏è‚ùå', description = f'**–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {message.author.mention}. –ö–∞–Ω–∞–ª: {message.channel.mention}\n–°–æ–æ–±—â–µ–Ω–∏–µ:** {message.content}')
                e.set_footer(text = f'{time}', icon_url = message.author.avatar_url)
                await logchannel.send(embed = e)
        except AttributeError:
            pass
            
    #ON MEMBER JOIN
    @commands.Cog.listener()
    async def on_member_join(self, member):
        channel = member.guild.system_channel
        emb = discord.Embed(title = '‚òëÔ∏è‚†Ä–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', color = 0x951fad, description = f'\n\n**{member}** –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è(-–∞—Å—å) –∫ —Å–µ—Ä–≤–µ—Ä—É!')
        emb.set_thumbnail(url = member.avatar_url)
        emb.set_footer(text = f'–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {member.guild.member_count}')
        await channel.send(embed = emb)

    #ON MEMBER REMOVE
    @commands.Cog.listener()
    async def on_member_remove(self, member):
        channel = member.guild.system_channel
        emb = discord.Embed(title = '‚ùå‚†Ä–î–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏', color = 0x951fad, description = f'\n\n**{member}** –ø–æ–∫–∏–Ω—É–ª(-–∞) —Å–µ—Ä–≤–µ—Ä!')
        emb.set_thumbnail(url = member.avatar_url)
        emb.set_footer(text = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Å—Ç–∞–ª–æ—Å—å: {member.guild.member_count}')
        await channel.send(embed = emb)

def setup(client):
    client.add_cog(Logs(client))
